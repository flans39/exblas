SRCS = main.cpp common.cpp Superaccumulator.cpp DDOT.Launcher.cpp
#DDOT.Launcher.AMD.cpp DDOT.Launcher.NVIDIA.cpp DDOT.Launcher.Repro.cpp
EXE_NAME = main.out

SOURCES = $(abspath $(SRCS))

OBJECTS := ${SOURCES:.c=.o}
OBJECTS := ${OBJECTS:.cpp=.o}

HEADERS = 
INCLUDE = -I$(PATH_TO_NVIDIA_INC) -I$(PATH_TO_APPLE_INC) 
COMPILERFLAGS = -c -Wall -g -O2 -Wshorten-64-to-32
CXX = g++
CXXFLAGS=-Wall -W -O2 $(DEFINES:%=-D%) $(INCLUDE) -march=native -fabi-version=0 -masm=intel -DGPU_PROFILING=1

# NVIDIA
PATH_TO_NVIDIA_INC=/usr/local/cuda/include/ -I$(HOME)/soft/lib/mpfr/include/ -I$(HOME)/soft/lib/gmp/include/
PATH_TO_NVIDIA_LIB=/usr/lib/ -L$(HOME)/soft/lib/mpfr/lib/ -I$(HOME)/soft/lib/gmp/lib/ -lmpfr -lgmp -lOpenCL

all: $(EXE_NAME) 

$(EXE_NAME):$(OBJECTS)
	$(CXX) $(CXXFLAGS) -I$(PATH_TO_NVIDIA_INC) -Wl,-rpath,$(PATH_TO_NVIDIA_LIB) -o $@ $(OBJECTS) -L$(PATH_TO_NVIDIA_LIB)

%.o : %.cpp
	$(CXX) $(CXXFLAGS) -I$(PATH_TO_NVIDIA_INC) -Wl,-rpath,$(PATH_TO_NVIDIA_LIB) -c $< -L$(PATH_TO_NVIDIA_LIB)

clean:
	rm -f main.out *.o
